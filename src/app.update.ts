import { AppService } from "./app.service";
import { Ctx, Hears, InjectBot, Message, On, Scene, Start, Update } from "nestjs-telegraf";
import { Context, Telegraf } from "telegraf";
import { Injectable } from "@nestjs/common";
import { actionButtons, completeButtons, removeKeyboard } from "./app.buttons";
import { SceneContext } from "telegraf/typings/scenes";
import { todos } from "./utils";




@Update()
@Injectable()
export class AppUpdate {
  constructor(@InjectBot() private readonly bot: Telegraf<Context>, private readonly appService: AppService) {
  }

  @Start()
  async start(@Ctx() ctx: Context) {
    await ctx.reply("–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", actionButtons());
  }

  @On("sticker")
  async onSticker(@Ctx() ctx: Context) {
    await ctx.reply("üëç");
  }

  @Hears("üóìÔ∏è –°–ø–∏—Å–æ–∫ –¥–µ–ª")
  async list(@Ctx() ctx: Context) {
    await ctx.reply(
      `–°–ø–∏—Å–æ–∫ –¥–µ–ª: \n\n${todos
        .map(t => (
          (t.isDone ? "‚úÖ " : "‚ö™ ") + t.name + "\n\n")
        ).join(" ")}`
    );
  }


  @Hears("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å")
  async complete(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('complete')
  }

  @Hears("‚ùå –£–¥–∞–ª–∏—Ç—å")
  async delete(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('delete')
  }

  @Hears("üîß –°–æ–∑–¥–∞—Ç—å")
  async create(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('create')
  }

}